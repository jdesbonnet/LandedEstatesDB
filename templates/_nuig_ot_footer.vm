
		</div>
	 	<!-- END BODY -->
		
	  </div>
    <!-- END LEFTBAR-BODY-RIGHTBAR -->
  
  <!-- FOOTER -->
	<!-- includes/skins/2005/greybar.inc -->
	<div id="footer">
		<div id="footerleft">
		</div>
		<div id="footerright">
			<ul>
				<li><a title="Disclaimer" href="http://www.nuigalway.ie/disclaimer.php">Disclaimer</a></li>
				<li><a title="Privacy" href="http://www.nuigalway.ie/privacy.php">Privacy</a></li>
				<li><a title="Accessibility [access key '0']" accesskey="0" href="http://www.nuigalway.ie/accessibility.php">Accessibility</a></li>
			</ul>
		</div>
	</div>
	
	
	<div id="valid">
	Email: <a href="mailto:info@landedestates.ie">info@landedestates.ie</a>. 
	&nbsp; &nbsp; 
	Landed Estates Database, $VERSION
	##include ("includes/footer.inc")
	##include ("includes/skins/2005/lastupdated.inc")
	</div>
  <!-- END FOOTER -->
	
	</div>
  <!-- END CHANGEABLE -->
  
<!-- END CONTAINER -->
</div>

<!-- BOTTOM SPACER -->
<div id="pagebottom"><img src="http://www.nuigalway.ie/images/spacer.png" height="5" width="5" alt="Bottom of Page" /></div>
<!-- END BOTTOM SPACER -->

<!-- END DOTS -->
</div>

<!--documents/landedestatesImages.js -->
<script type="text/javascript" >
function randomImage() {
	var headImages = [ '../assets/header.jpg' ];
	var max = headImages.length -1;
	var num = Math.floor((Math.random() * max));
	if (document.getElementById) {
		var headerImageDiv = document.getElementById('logoimage');
		if (headerImageDiv) {
			headerImageDiv.style.backgroundImage = "url(" + headImages[num] + ")";
		}
	}
	return;
}
randomImage();
</script>


<script src="$YUI/utilities/utilities.js"></script>
<script src="$contextPath/assets/lesite.js"></script>

#if ($YMAP_ENABLE)
<script type="text/javascript">var YMAPPID = "$yahooMapKey";</script>
##<script src="http://us.js2.yimg.com/us.js.yimg.com/lib/map/js/api/ymapapi_3_7_1_10.js"></script>
##<script src="http://api.maps.yahoo.com/ajaxymap?v=3.8&appid=$yahooMapKey"></script>
<script src="http://us.js2.yimg.com/us.js.yimg.com/lib/map/js/api/ymapapi_3_8_2_3.js"></script>
<script type="text/javascript">
var markerImage = new YImage(); 
markerImage.src = '$contextPath/gr/red5.png';
markerImage.size = new YSize(5,5); 
markerImage.offsetSmartWindow = new YCoordPoint(3,3); 
var map = new YMap(document.getElementById("mapContainer"));
#if ($onLoadFunction)
	//window.onload=$onLoadFunction;
	YAHOO.util.Event.onDOMReady( function () {
		 ${onLoadFunction}() 
	});
#end
</script>
#end
## end test for $YMAP_ENABLE



##if ($GOOGLE_MAP_ENABLE)
<script src="http://maps.google.com/maps/api/js?sensor=false"></script>

<script>
var g_map;
var g_markers = [];

// Need just one infowindow object which can be reused
var g_infowindow = new google.maps.InfoWindow({
	content: ""
});

function toString(o) {
	var s="";
	for (var i in o) {
		s+= i+"="+o[i]+";";
	}
	return s;
}

function houseMarkerContent (rec) {
	var content = "<b><a href=\"/LandedEstates/jsp/property-show.jsp?id="
		+ rec.id + "\">" + rec.name + "</a></b><br />\n";
	if (rec.image_id != null) {
		content += "<img src=\"/LandedEstates/img/tn/" 
			+ rec.image_id + ".jpg\" />\n";
	}
	return content;
}

function drawHouseMarkers(latmin,lonmin,latmax,lonmax) {
	var url = "query-house-by-latlon.async.jsp" 
		+ "?latmin=" + latmin + "&latmax=" + latmax
		+ "&lonmin=" + lonmin + "&lonmax=" + lonmax;
	YAHOO.util.Connect.asyncRequest('GET', url, {
		success : function (o) {
			var recs = eval ("(" + o.responseText + ")"); // TODO: use JSON lib
			updateMarkers (recs,"http://google-maps-icons.googlecode.com/files/tower.png",houseMarkerContent);
			document.getElementById("mapConsole").innerHTML = "Houses in view: " + recs.length;
		},
		failure : function (o) {
			alert ('fail: ' + o.responseText);
		}
	});
}

function baronyMarkerContent (rec) {
	return "Barony of <b>" + rec.name + "</b>";
}
			
function drawBaronyMarkers(latmin,lonmin,latmax,lonmax) {
	var url = "query-barony-by-latlon.async.jsp" 
		+ "?latmin=" + latmin + "&latmax=" + latmax
		+ "&lonmin=" + lonmin + "&lonmax=" + lonmax;
	YAHOO.util.Connect.asyncRequest('GET', url, {
		success : function (o) {
			var recs = eval ("(" + o.responseText + ")"); // TODO: use JSON lib
			updateMarkers (recs,"http://www.google.com/mapfiles/markerB.png", baronyMarkerContent);	
			document.getElementById("mapConsole").innerHTML = "Baronies in view: " + recs.length ;
		},
		failure : function (o) {
			alert ('fail: ' + o.responseText);
		}
	});
}

/**
 * From array of records (either barony or house) returned from server
 * work out what new markers that need to be created. Use 'markerContentFn'
 * function (supplied by the caller)  to create the contents of the info window.
 *
 * @param recs Array of records returned from server
 * @param icon URL of icon graphic
 * @param markerContentFn Function that accepts a record as a parameter which 
 * will return content of infowindow.
 * @return void
 */
function updateMarkers (recs,icon, markerContentFn) {

	var i,j,n;
							
	// Make hash tables of IDs associated with existing markers
	// and IDs of new records to aid in finding markers to remove
	// and which makers that need to be created
					
	var oldHash = [];
	var newHash = [];
	var newmarkers = [];
	
	for (i = 0, n = g_markers.length; i < n; i++) {
		oldHash["id"+g_markers[i].rec.id] = true;
	}
	for (i = 0, n = recs.length; i < n; i++) {
		if (recs[i] == null) {
			continue;
		}
		newHash["id"+recs[i].id] = true;
	}
	
	/*
	for (i = 0, n = markers.length; i < n; i++) {
		if (newHash[markers[i].rec.id] === true) {
			// keep it
			newmarkers.push(markers[i]);
		} else {
			// remove it
			markers[i].setMap(null);
		}
	}
	*/
					
	// At this point markers out of view have been removed. Markers
	// that remain in view have been added to newmarkers array.
	
	for (i = 0, n = recs.length; i < n; i++) {
		var r = recs[i];
		if ( ! r || ! r.lat || ! r.lon) {
			continue;
		}
					
		if (oldHash["id"+recs[i].id]===true) {
			// a marker already exists for this record					
			continue;
		}
			
		// Need to create a marker for this record

		var m = new google.maps.Marker({
			position: new google.maps.LatLng(r.lat, r.lon),
			icon: icon, 
			title: r.name,
			map: g_map
		});
		m.rec = r;
			
		google.maps.event.addListener(m, 'click', function(e) {
			g_infowindow.setContent(""+markerContentFn(this.rec));
			g_infowindow.open(g_map,this);			
		});
		
		g_markers.push(m);
	}
}


function zoomToLanLon(lat,lon,zoom) {
	alert ('zoom!');
}
function updateMap () {
	var b  = g_map.getBounds();
	var lonmin = b.getSouthWest().lng();
	var latmin = b.getSouthWest().lat();
	var lonmax = b.getNorthEast().lng();
	var latmax = b.getNorthEast().lat();
	var zoom = g_map.getZoom();
	
	// Draw house markers at zoom level of 11 or more, 
	// else barony markers as a means to reduce clutter and improve performance.
	if (zoom > 10) {
		drawHouseMarkers(latmin,lonmin,latmax,lonmax);
	} else {
		drawBaronyMarkers(latmin,lonmin,latmax,lonmax);
	}

}

function clearAllMarkers() {
	var i,n;
	for (i = 0, n = g_markers.length; i < n; i++) {
		g_markers[i].setMap(null);
	}
	g_markers = [];
}

YAHOO.util.Event.onDOMReady( function () {

	// The property-show page will set drawMarker=true if drawing a marker
	// is all that is required. Else do a full big map.
	 
	if (typeof drawMarker === "undefined") {
 		var c = new google.maps.LatLng(53.0,-7.0);
		var opts = {zoom:7, center: c, mapTypeId: google.maps.MapTypeId.ROADMAP};
    	g_map = new google.maps.Map(document.getElementById("mapContainer"),opts);
 		// Event names drag,dragend,idle,zoom_changed
		google.maps.event.addListener(g_map, 'bounds_changed', function() {
			updateMap();
		});
		google.maps.event.addListener(g_map, 'zoom_changed', function() {
			clearAllMarkers();
		});
	} else {
		var c = new google.maps.LatLng(markerLoc[0], markerLoc[1]);
		var opts = {zoom:9, center: c, mapTypeId: google.maps.MapTypeId.ROADMAP};
    	g_map = new google.maps.Map(document.getElementById("mapContainer"),opts);
    	var m = new google.maps.Marker({
			position:c,
			map: g_map
		});
 	} 

});
</script>
##end
## end test for $GOOGLE_MAP_ENABLE

<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-239129-36");
pageTracker._initData();
pageTracker._trackPageview();
</script>

</body>
</html>
